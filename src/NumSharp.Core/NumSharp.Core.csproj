<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <!--<TargetFramework>net472</TargetFramework>-->
    <!--<TargetFramework>netcoreapp2.1</TargetFramework>-->
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Authors>Haiping Chen, Christian Kahr, Darren Schroeder</Authors>
    <PackageOutputPath>../../packages</PackageOutputPath>
    <Description>NumSharp is the fundamental package for scientific computing with dot NET. It has implemented the arange, array, max, min, reshape, normalize, unique and random interfaces and so on. More and more interfaces will be added to the library gradually. If you want to use .NET to get started with machine learning, NumSharp will be your best tool library.</Description>
    <PackageProjectUrl>https://github.com/SciSharp</PackageProjectUrl>
    <Copyright>Apache 2.0</Copyright>
    <RepositoryUrl>https://github.com/SciSharp/NumSharp</RepositoryUrl>
    <PackageReleaseNotes>Add VectorT as a backend</PackageReleaseNotes>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
    <FileVersion>0.9.0.0</FileVersion>
    <RepositoryType>git</RepositoryType>
    <PackageTags>NumPy, NumSharp, MachineLearning, Math, Scientific, Numeric</PackageTags>
    <Version>0.9.0</Version>
    <PackageLicenseUrl>LICENSE</PackageLicenseUrl>
    <LangVersion>latest</LangVersion>
    <PackageIconUrl>https://avatars3.githubusercontent.com/u/44989469?s=200&amp;v=4</PackageIconUrl>
    <PackageId>NumSharp</PackageId>
    <Product>NumSharp</Product>
    <Company>SciSharp STACK</Company>
    <RootNamespace>NumSharp</RootNamespace>
  </PropertyGroup>

  <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^net\d'))">
    <DefineConstants>NETFRAMEWORK</DefineConstants>
    <RuntimeIdentifier>win-x86</RuntimeIdentifier>
  </PropertyGroup>

  <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^netstandard\d'))">
    <DefineConstants>NETSTANDARD</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^netcoreapp\d'))">
    <DefineConstants>NETCORE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^net\d'))">
    <PackageReference Include="System.Memory" Version="4.5.1" />
  </ItemGroup>

  <ItemGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^netcoreapp\d'))">
    <PackageReference Include="Microsoft.Windows.Compatibility" Version="2.0.1" />
    <PackageReference Include="System.Drawing.Common" Version="4.5.1" />
    <PackageReference Include="System.Memory" Version="4.5.1" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Operations\NdArray.ElementsWise.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="Operations\NdArray.ElementsWise.tt" />
  </ItemGroup>

  <Target Name="LogDebugInfo">
    <Message Text="Building for $(TargetFramework) on $(OS)" Importance="High" />
  </Target>

  <ItemGroup>
		<Content CopyToOutputDirectory="PreserveNewest" Include="./runtimes/win-x64/native/lapack.dll" Link="lapack.dll" Pack="true" PackagePath="runtimes/win-x64/native/lapack.dll" />
    <Content CopyToOutputDirectory="PreserveNewest" Include="./runtimes/win-x64/native/blas_win64_MT.dll" Link="blas_win64_MT.dll" Pack="true" PackagePath="runtimes/win-x64/native/blas_win64_MT.dll" />
    <Content CopyToOutputDirectory="PreserveNewest" Include="./runtimes/linux-x64/native/blas.so" Link="blas.so" Pack="true" PackagePath="runtimes/linux-x64/native/blas.so" />
    <Content CopyToOutputDirectory="PreserveNewest" Include="./runtimes/linux-x64/native/lapack.so" Link="lapack.so" Pack="true" PackagePath="runtimes/linux-x64/native/lapack.so" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="ArrayFire" Version="0.0.1" />
    <PackageReference Include="System.Numerics.Vectors" Version="4.5.0" />
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

</Project>