### YamlMime:ManagedReference
items:
- uid: NumSharp.Extensions.NumPyExtensions
  commentId: T:NumSharp.Extensions.NumPyExtensions
  id: NumPyExtensions
  parent: NumSharp.Extensions
  children:
  - NumSharp.Extensions.NumPyExtensions.delete``1(NumSharp.NumPy{``0},NumSharp.NDArray{``0},System.Collections.Generic.IEnumerable{``0})
  - NumSharp.Extensions.NumPyExtensions.ones``1(NumSharp.NumPy{``0},NumSharp.Shape)
  langs:
  - csharp
  - vb
  name: NumPyExtensions
  nameWithType: NumPyExtensions
  fullName: NumSharp.Extensions.NumPyExtensions
  type: Class
  source:
    remote:
      path: src/NumSharp/Manipulation/NumPy.delete.cs
      branch: master
      repo: https://github.com/dotChris90/NumSharp.git
    id: NumPyExtensions
    path: ../src/NumSharp/Manipulation/NumPy.delete.cs
    startLine: 7
  assemblies:
  - NumSharp
  namespace: NumSharp.Extensions
  syntax:
    content: public static class NumPyExtensions
    content.vb: Public Module NumPyExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NumSharp.Extensions.NumPyExtensions.ones``1(NumSharp.NumPy{``0},NumSharp.Shape)
  commentId: M:NumSharp.Extensions.NumPyExtensions.ones``1(NumSharp.NumPy{``0},NumSharp.Shape)
  id: ones``1(NumSharp.NumPy{``0},NumSharp.Shape)
  isExtensionMethod: true
  parent: NumSharp.Extensions.NumPyExtensions
  langs:
  - csharp
  - vb
  name: ones<T>(NumPy<T>, Shape)
  nameWithType: NumPyExtensions.ones<T>(NumPy<T>, Shape)
  fullName: NumSharp.Extensions.NumPyExtensions.ones<T>(NumSharp.NumPy<T>, NumSharp.Shape)
  type: Method
  source:
    remote:
      path: src/NumSharp/Creation/NumPy.ones.cs
      branch: master
      repo: https://github.com/dotChris90/NumSharp.git
    id: ones
    path: ../src/NumSharp/Creation/NumPy.ones.cs
    startLine: 18
  assemblies:
  - NumSharp
  namespace: NumSharp.Extensions
  summary: "\nReturn a new array of given shape and type, filled with ones.\n"
  example: []
  syntax:
    content: public static NDArray<T> ones<T>(this NumPy<T> np, Shape shape)
    parameters:
    - id: np
      type: NumSharp.NumPy{{T}}
      description: ''
    - id: shape
      type: NumSharp.Shape
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: NumSharp.NDArray{{T}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ones(Of T)(np As NumPy(Of T), shape As Shape) As NDArray(Of T)
  overload: NumSharp.Extensions.NumPyExtensions.ones*
  nameWithType.vb: NumPyExtensions.ones(Of T)(NumPy(Of T), Shape)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NumSharp.Extensions.NumPyExtensions.ones(Of T)(NumSharp.NumPy(Of T), NumSharp.Shape)
  name.vb: ones(Of T)(NumPy(Of T), Shape)
- uid: NumSharp.Extensions.NumPyExtensions.delete``1(NumSharp.NumPy{``0},NumSharp.NDArray{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:NumSharp.Extensions.NumPyExtensions.delete``1(NumSharp.NumPy{``0},NumSharp.NDArray{``0},System.Collections.Generic.IEnumerable{``0})
  id: delete``1(NumSharp.NumPy{``0},NumSharp.NDArray{``0},System.Collections.Generic.IEnumerable{``0})
  isExtensionMethod: true
  parent: NumSharp.Extensions.NumPyExtensions
  langs:
  - csharp
  - vb
  name: delete<T>(NumPy<T>, NDArray<T>, IEnumerable<T>)
  nameWithType: NumPyExtensions.delete<T>(NumPy<T>, NDArray<T>, IEnumerable<T>)
  fullName: NumSharp.Extensions.NumPyExtensions.delete<T>(NumSharp.NumPy<T>, NumSharp.NDArray<T>, System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/NumSharp/Manipulation/NumPy.delete.cs
      branch: master
      repo: https://github.com/dotChris90/NumSharp.git
    id: delete
    path: ../src/NumSharp/Manipulation/NumPy.delete.cs
    startLine: 9
  assemblies:
  - NumSharp
  namespace: NumSharp.Extensions
  syntax:
    content: public static NDArray<T> delete<T>(this NumPy<T> np, NDArray<T> nd, IEnumerable<T> delete)
    parameters:
    - id: np
      type: NumSharp.NumPy{{T}}
    - id: nd
      type: NumSharp.NDArray{{T}}
    - id: delete
      type: System.Collections.Generic.IEnumerable{{T}}
    typeParameters:
    - id: T
    return:
      type: NumSharp.NDArray{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function delete(Of T)(np As NumPy(Of T), nd As NDArray(Of T), delete As IEnumerable(Of T)) As NDArray(Of T)
  overload: NumSharp.Extensions.NumPyExtensions.delete*
  nameWithType.vb: NumPyExtensions.delete(Of T)(NumPy(Of T), NDArray(Of T), IEnumerable(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NumSharp.Extensions.NumPyExtensions.delete(Of T)(NumSharp.NumPy(Of T), NumSharp.NDArray(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: delete(Of T)(NumPy(Of T), NDArray(Of T), IEnumerable(Of T))
references:
- uid: NumSharp.Extensions
  commentId: N:NumSharp.Extensions
  name: NumSharp.Extensions
  nameWithType: NumSharp.Extensions
  fullName: NumSharp.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NumSharp.Extensions.NumPyExtensions.ones*
  commentId: Overload:NumSharp.Extensions.NumPyExtensions.ones
  name: ones
  nameWithType: NumPyExtensions.ones
  fullName: NumSharp.Extensions.NumPyExtensions.ones
- uid: NumSharp.NumPy{{T}}
  commentId: T:NumSharp.NumPy{``0}
  parent: NumSharp
  definition: NumSharp.NumPy`1
  name: NumPy<T>
  nameWithType: NumPy<T>
  fullName: NumSharp.NumPy<T>
  nameWithType.vb: NumPy(Of T)
  fullName.vb: NumSharp.NumPy(Of T)
  name.vb: NumPy(Of T)
  spec.csharp:
  - uid: NumSharp.NumPy`1
    name: NumPy
    nameWithType: NumPy
    fullName: NumSharp.NumPy
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NumSharp.NumPy`1
    name: NumPy
    nameWithType: NumPy
    fullName: NumSharp.NumPy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NumSharp.Shape
  commentId: T:NumSharp.Shape
  parent: NumSharp
  name: Shape
  nameWithType: Shape
  fullName: NumSharp.Shape
- uid: NumSharp.NDArray{{T}}
  commentId: T:NumSharp.NDArray{``0}
  parent: NumSharp
  definition: NumSharp.NDArray`1
  name: NDArray<T>
  nameWithType: NDArray<T>
  fullName: NumSharp.NDArray<T>
  nameWithType.vb: NDArray(Of T)
  fullName.vb: NumSharp.NDArray(Of T)
  name.vb: NDArray(Of T)
  spec.csharp:
  - uid: NumSharp.NDArray`1
    name: NDArray
    nameWithType: NDArray
    fullName: NumSharp.NDArray
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NumSharp.NDArray`1
    name: NDArray
    nameWithType: NDArray
    fullName: NumSharp.NDArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NumSharp.NumPy`1
  commentId: T:NumSharp.NumPy`1
  name: NumPy<T>
  nameWithType: NumPy<T>
  fullName: NumSharp.NumPy<T>
  nameWithType.vb: NumPy(Of T)
  fullName.vb: NumSharp.NumPy(Of T)
  name.vb: NumPy(Of T)
  spec.csharp:
  - uid: NumSharp.NumPy`1
    name: NumPy
    nameWithType: NumPy
    fullName: NumSharp.NumPy
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NumSharp.NumPy`1
    name: NumPy
    nameWithType: NumPy
    fullName: NumSharp.NumPy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NumSharp
  commentId: N:NumSharp
  name: NumSharp
  nameWithType: NumSharp
  fullName: NumSharp
- uid: NumSharp.NDArray`1
  commentId: T:NumSharp.NDArray`1
  parent: NumSharp
  name: NDArray<T>
  nameWithType: NDArray<T>
  fullName: NumSharp.NDArray<T>
  nameWithType.vb: NDArray(Of T)
  fullName.vb: NumSharp.NDArray(Of T)
  name.vb: NDArray(Of T)
  spec.csharp:
  - uid: NumSharp.NDArray`1
    name: NDArray
    nameWithType: NDArray
    fullName: NumSharp.NDArray
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NumSharp.NDArray`1
    name: NDArray
    nameWithType: NDArray
    fullName: NumSharp.NDArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NumSharp.Extensions.NumPyExtensions.delete*
  commentId: Overload:NumSharp.Extensions.NumPyExtensions.delete
  name: delete
  nameWithType: NumPyExtensions.delete
  fullName: NumSharp.Extensions.NumPyExtensions.delete
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
